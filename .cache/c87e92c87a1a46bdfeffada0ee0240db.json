{"dependencies":[{"name":"/home/maciej/Documents/Projects/opt-food-catching/package.json","includedInParent":true,"mtime":1519384621321},{"name":"/home/maciej/Documents/Projects/opt-food-catching/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1519384617461}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The TextMetrics object represents the measurement of a block of text with a specified style.\n *\n * @class\n * @memberOf PIXI\n */\nvar TextMetrics = function () {\n    /**\n     * @param {string} text - the text that was measured\n     * @param {PIXI.TextStyle} style - the style that was measured\n     * @param {number} width - the measured width of the text\n     * @param {number} height - the measured height of the text\n     * @param {array} lines - an array of the lines of text broken by new lines and wrapping if specified in style\n     * @param {array} lineWidths - an array of the line widths for each line matched to `lines`\n     * @param {number} lineHeight - the measured line height for this style\n     * @param {number} maxLineWidth - the maximum line width for all measured lines\n     * @param {Object} fontProperties - the font properties object from TextMetrics.measureFont\n     */\n    function TextMetrics(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n        _classCallCheck(this, TextMetrics);\n\n        this.text = text;\n        this.style = style;\n        this.width = width;\n        this.height = height;\n        this.lines = lines;\n        this.lineWidths = lineWidths;\n        this.lineHeight = lineHeight;\n        this.maxLineWidth = maxLineWidth;\n        this.fontProperties = fontProperties;\n    }\n\n    /**\n     * Measures the supplied string of text and returns a Rectangle.\n     *\n     * @param {string} text - the text to measure.\n     * @param {PIXI.TextStyle} style - the text style to use for measuring\n     * @param {boolean} [wordWrap] - optional override for if word-wrap should be applied to the text.\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {PIXI.TextMetrics} measured width and height of the text.\n     */\n\n\n    TextMetrics.measureText = function measureText(text, style, wordWrap) {\n        var canvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : TextMetrics._canvas;\n\n        wordWrap = wordWrap || style.wordWrap;\n        var font = style.toFontString();\n        var fontProperties = TextMetrics.measureFont(font);\n        var context = canvas.getContext('2d');\n\n        context.font = font;\n\n        var outputText = wordWrap ? TextMetrics.wordWrap(text, style, canvas) : text;\n        var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n        var lineWidths = new Array(lines.length);\n        var maxLineWidth = 0;\n\n        for (var i = 0; i < lines.length; i++) {\n            var lineWidth = context.measureText(lines[i]).width + (lines[i].length - 1) * style.letterSpacing;\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        var width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow) {\n            width += style.dropShadowDistance;\n        }\n\n        var lineHeight = style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n        var height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness) + (lines.length - 1) * (lineHeight + style.leading);\n\n        if (style.dropShadow) {\n            height += style.dropShadowDistance;\n        }\n\n        return new TextMetrics(text, style, width, height, lines, lineWidths, lineHeight + style.leading, maxLineWidth, fontProperties);\n    };\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @param {PIXI.TextStyle} style - the style to use when wrapping\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {string} New string with new lines applied where required\n     */\n\n\n    TextMetrics.wordWrap = function wordWrap(text, style) {\n        var canvas = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TextMetrics._canvas;\n\n        var context = canvas.getContext('2d');\n\n        // Greedy wrapping algorithm that will wrap words as the line grows longer\n        // than its horizontal bounds.\n        var result = '';\n        var firstChar = text.charAt(0);\n        var lines = text.split('\\n');\n        var wordWrapWidth = style.wordWrapWidth;\n        var characterCache = {};\n\n        for (var i = 0; i < lines.length; i++) {\n            var spaceLeft = wordWrapWidth;\n            var words = lines[i].split(' ');\n\n            for (var j = 0; j < words.length; j++) {\n                var wordWidth = context.measureText(words[j]).width;\n\n                if (style.breakWords && wordWidth > wordWrapWidth) {\n                    // Word should be split in the middle\n                    var characters = words[j].split('');\n\n                    for (var c = 0; c < characters.length; c++) {\n                        var character = characters[c];\n                        var characterWidth = characterCache[character];\n\n                        if (characterWidth === undefined) {\n                            characterWidth = context.measureText(character).width;\n                            characterCache[character] = characterWidth;\n                        }\n\n                        if (characterWidth > spaceLeft) {\n                            result += '\\n' + character;\n                            spaceLeft = wordWrapWidth - characterWidth;\n                        } else {\n                            if (c === 0 && (j > 0 || firstChar === ' ')) {\n                                result += ' ';\n                            }\n\n                            result += character;\n                            spaceLeft -= characterWidth;\n                        }\n                    }\n                } else {\n                    var wordWidthWithSpace = wordWidth + context.measureText(' ').width;\n\n                    if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                        // Skip printing the newline if it's the first word of the line that is\n                        // greater than the word wrap width.\n                        if (j > 0) {\n                            result += '\\n';\n                        }\n                        result += words[j];\n                        spaceLeft = wordWrapWidth - wordWidth;\n                    } else {\n                        spaceLeft -= wordWidthWithSpace;\n                        result += ' ' + words[j];\n                    }\n                }\n            }\n\n            if (i < lines.length - 1) {\n                result += '\\n';\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given font-style\n     *\n     * @static\n     * @param {string} font - String representing the style of the font\n     * @return {PIXI.TextMetrics~FontMetrics} Font properties object\n     */\n\n\n    TextMetrics.measureFont = function measureFont(font) {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (TextMetrics._fonts[font]) {\n            return TextMetrics._fonts[font];\n        }\n\n        var properties = {};\n\n        var canvas = TextMetrics._canvas;\n        var context = TextMetrics._context;\n\n        context.font = font;\n\n        var width = Math.ceil(context.measureText('|MÉq').width);\n        var baseline = Math.ceil(context.measureText('M').width);\n        var height = 2 * baseline;\n\n        baseline = baseline * 1.4 | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = font;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText('|MÉq', 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i = 0;\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i) {\n            for (var j = 0; j < line; j += 4) {\n                if (imagedata[idx + j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop) {\n                idx += line;\n            } else {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i) {\n            for (var _j = 0; _j < line; _j += 4) {\n                if (imagedata[idx + _j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop) {\n                idx -= line;\n            } else {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        TextMetrics._fonts[font] = properties;\n\n        return properties;\n    };\n\n    return TextMetrics;\n}();\n\n/**\n * Internal return object for {@link PIXI.TextMetrics.measureFont `TextMetrics.measureFont`}.\n * @class FontMetrics\n * @memberof PIXI.TextMetrics~\n * @property {number} ascent - The ascent distance\n * @property {number} descent - The descent distance\n * @property {number} fontSize - Font size from ascent to descent\n */\n\nexports.default = TextMetrics;\nvar canvas = document.createElement('canvas');\n\ncanvas.width = canvas.height = 10;\n\n/**\n * Cached canvas element for measuring text\n * @memberof PIXI.TextMetrics\n * @type {HTMLCanvasElement}\n * @private\n */\nTextMetrics._canvas = canvas;\n\n/**\n * Cache for context to use.\n * @memberof PIXI.TextMetrics\n * @type {CanvasRenderingContext2D}\n * @private\n */\nTextMetrics._context = canvas.getContext('2d');\n\n/**\n * Cache of PIXI.TextMetrics~FontMetrics objects.\n * @memberof PIXI.TextMetrics\n * @type {Object}\n * @private\n */\nTextMetrics._fonts = {};\n//# sourceMappingURL=TextMetrics.js.map","map":{"mappings":[{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/pixi.js/lib/core/text/TextMetrics.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}}],"sources":{"../node_modules/pixi.js/lib/core/text/TextMetrics.js":"'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The TextMetrics object represents the measurement of a block of text with a specified style.\n *\n * @class\n * @memberOf PIXI\n */\nvar TextMetrics = function () {\n    /**\n     * @param {string} text - the text that was measured\n     * @param {PIXI.TextStyle} style - the style that was measured\n     * @param {number} width - the measured width of the text\n     * @param {number} height - the measured height of the text\n     * @param {array} lines - an array of the lines of text broken by new lines and wrapping if specified in style\n     * @param {array} lineWidths - an array of the line widths for each line matched to `lines`\n     * @param {number} lineHeight - the measured line height for this style\n     * @param {number} maxLineWidth - the maximum line width for all measured lines\n     * @param {Object} fontProperties - the font properties object from TextMetrics.measureFont\n     */\n    function TextMetrics(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n        _classCallCheck(this, TextMetrics);\n\n        this.text = text;\n        this.style = style;\n        this.width = width;\n        this.height = height;\n        this.lines = lines;\n        this.lineWidths = lineWidths;\n        this.lineHeight = lineHeight;\n        this.maxLineWidth = maxLineWidth;\n        this.fontProperties = fontProperties;\n    }\n\n    /**\n     * Measures the supplied string of text and returns a Rectangle.\n     *\n     * @param {string} text - the text to measure.\n     * @param {PIXI.TextStyle} style - the text style to use for measuring\n     * @param {boolean} [wordWrap] - optional override for if word-wrap should be applied to the text.\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {PIXI.TextMetrics} measured width and height of the text.\n     */\n\n\n    TextMetrics.measureText = function measureText(text, style, wordWrap) {\n        var canvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : TextMetrics._canvas;\n\n        wordWrap = wordWrap || style.wordWrap;\n        var font = style.toFontString();\n        var fontProperties = TextMetrics.measureFont(font);\n        var context = canvas.getContext('2d');\n\n        context.font = font;\n\n        var outputText = wordWrap ? TextMetrics.wordWrap(text, style, canvas) : text;\n        var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n        var lineWidths = new Array(lines.length);\n        var maxLineWidth = 0;\n\n        for (var i = 0; i < lines.length; i++) {\n            var lineWidth = context.measureText(lines[i]).width + (lines[i].length - 1) * style.letterSpacing;\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        var width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow) {\n            width += style.dropShadowDistance;\n        }\n\n        var lineHeight = style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n        var height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness) + (lines.length - 1) * (lineHeight + style.leading);\n\n        if (style.dropShadow) {\n            height += style.dropShadowDistance;\n        }\n\n        return new TextMetrics(text, style, width, height, lines, lineWidths, lineHeight + style.leading, maxLineWidth, fontProperties);\n    };\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @param {PIXI.TextStyle} style - the style to use when wrapping\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {string} New string with new lines applied where required\n     */\n\n\n    TextMetrics.wordWrap = function wordWrap(text, style) {\n        var canvas = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TextMetrics._canvas;\n\n        var context = canvas.getContext('2d');\n\n        // Greedy wrapping algorithm that will wrap words as the line grows longer\n        // than its horizontal bounds.\n        var result = '';\n        var firstChar = text.charAt(0);\n        var lines = text.split('\\n');\n        var wordWrapWidth = style.wordWrapWidth;\n        var characterCache = {};\n\n        for (var i = 0; i < lines.length; i++) {\n            var spaceLeft = wordWrapWidth;\n            var words = lines[i].split(' ');\n\n            for (var j = 0; j < words.length; j++) {\n                var wordWidth = context.measureText(words[j]).width;\n\n                if (style.breakWords && wordWidth > wordWrapWidth) {\n                    // Word should be split in the middle\n                    var characters = words[j].split('');\n\n                    for (var c = 0; c < characters.length; c++) {\n                        var character = characters[c];\n                        var characterWidth = characterCache[character];\n\n                        if (characterWidth === undefined) {\n                            characterWidth = context.measureText(character).width;\n                            characterCache[character] = characterWidth;\n                        }\n\n                        if (characterWidth > spaceLeft) {\n                            result += '\\n' + character;\n                            spaceLeft = wordWrapWidth - characterWidth;\n                        } else {\n                            if (c === 0 && (j > 0 || firstChar === ' ')) {\n                                result += ' ';\n                            }\n\n                            result += character;\n                            spaceLeft -= characterWidth;\n                        }\n                    }\n                } else {\n                    var wordWidthWithSpace = wordWidth + context.measureText(' ').width;\n\n                    if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                        // Skip printing the newline if it's the first word of the line that is\n                        // greater than the word wrap width.\n                        if (j > 0) {\n                            result += '\\n';\n                        }\n                        result += words[j];\n                        spaceLeft = wordWrapWidth - wordWidth;\n                    } else {\n                        spaceLeft -= wordWidthWithSpace;\n                        result += ' ' + words[j];\n                    }\n                }\n            }\n\n            if (i < lines.length - 1) {\n                result += '\\n';\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given font-style\n     *\n     * @static\n     * @param {string} font - String representing the style of the font\n     * @return {PIXI.TextMetrics~FontMetrics} Font properties object\n     */\n\n\n    TextMetrics.measureFont = function measureFont(font) {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (TextMetrics._fonts[font]) {\n            return TextMetrics._fonts[font];\n        }\n\n        var properties = {};\n\n        var canvas = TextMetrics._canvas;\n        var context = TextMetrics._context;\n\n        context.font = font;\n\n        var width = Math.ceil(context.measureText('|MÉq').width);\n        var baseline = Math.ceil(context.measureText('M').width);\n        var height = 2 * baseline;\n\n        baseline = baseline * 1.4 | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = font;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText('|MÉq', 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i = 0;\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i) {\n            for (var j = 0; j < line; j += 4) {\n                if (imagedata[idx + j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop) {\n                idx += line;\n            } else {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i) {\n            for (var _j = 0; _j < line; _j += 4) {\n                if (imagedata[idx + _j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop) {\n                idx -= line;\n            } else {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        TextMetrics._fonts[font] = properties;\n\n        return properties;\n    };\n\n    return TextMetrics;\n}();\n\n/**\n * Internal return object for {@link PIXI.TextMetrics.measureFont `TextMetrics.measureFont`}.\n * @class FontMetrics\n * @memberof PIXI.TextMetrics~\n * @property {number} ascent - The ascent distance\n * @property {number} descent - The descent distance\n * @property {number} fontSize - Font size from ascent to descent\n */\n\nexports.default = TextMetrics;\nvar canvas = document.createElement('canvas');\n\ncanvas.width = canvas.height = 10;\n\n/**\n * Cached canvas element for measuring text\n * @memberof PIXI.TextMetrics\n * @type {HTMLCanvasElement}\n * @private\n */\nTextMetrics._canvas = canvas;\n\n/**\n * Cache for context to use.\n * @memberof PIXI.TextMetrics\n * @type {CanvasRenderingContext2D}\n * @private\n */\nTextMetrics._context = canvas.getContext('2d');\n\n/**\n * Cache of PIXI.TextMetrics~FontMetrics objects.\n * @memberof PIXI.TextMetrics\n * @type {Object}\n * @private\n */\nTextMetrics._fonts = {};\n//# sourceMappingURL=TextMetrics.js.map"},"lineCount":302}},"hash":"d29ce27c0fc799db8e9a10c21fd4898b","cacheData":{"env":{}}}